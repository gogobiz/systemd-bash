This file is alarm.def, from which is created alarm.c.
It implements the builtin "alarm" in Bash.

Copyright (C) 1987-2009 Free Software Foundation, Inc.

This file is part of GNU Bash, the Bourne Again SHell.

Bash is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Bash is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Bash.  If not, see <http://www.gnu.org/licenses/>.

$PRODUCES alarm.c
#include <config.h>

#if defined (HAVE_UNISTD_H)
#  include <unistd.h>
#endif

#include "../bashansi.h"

#include <stdio.h>
#include "../shell.h"

#include "common.h"

$BUILTIN alarm
$FUNCTION alarm_builtin
$SHORT_DOC alarm time 
Send a SIGALARM to the running shell

Schedule a SIGALRM to be sent to the running shell after a specified delay

Exit Status:
Returns success unless a write error occurs.
$END

$BUILTIN alarm
$FUNCTION alarm_builtin
$DEPENDS_ON !V9_ECHO
$SHORT_DOC alarm delay 
Send a SIGALARM to the running shell

Exit Status:
Returns success unless a write error occurs.
$END

int
alarm_builtin (list)
     WORD_LIST *list;
{
  char *temp;

  for (; list && (temp = list->word->word) && *temp == '-'; list = list->next)
    {
      /* If it appears that we are handling options, then make sure that
	 all of the options specified are actually valid.  Otherwise, the
	 string should just be alarmed. */
      temp++;

    }


  while (list)
    {
      temp =  list->word->word;
      if (temp)
	{
	    int seconds=0;
	    seconds=atoi(temp);
	    if(seconds>0) {
		alarm(seconds);
	    }
	}
      list = list->next;
    }

  return (sh_chkwrite (EXECUTION_SUCCESS));
}
